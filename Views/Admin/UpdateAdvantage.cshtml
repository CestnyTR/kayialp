@using kayialp.ViewModels
@model UpdateAdvantageVM
@{
    Layout = "/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Avantajı Güncelle";
}

<h2 class="mb-3">@ViewData["Title"]</h2>

<form asp-action="UpdateAdvantage" asp-route-id="@Model.Id" method="post" enctype="multipart/form-data"
    class="card p-3">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />

    <div class="alert alert-danger" asp-validation-summary="All"
        style="display:@(ViewData.ModelState.IsValid ? "none" : "block")"></div>

    <div class="row g-3">
        <div class="col-md-4">
            <label class="form-label d-block">Mevcut Görsel (313×313)</label>
            @if (!string.IsNullOrWhiteSpace(Model.ExistingImage))
            {
                <img src="@Model.ExistingImage"
                    style="width:120px;height:120px;object-fit:cover;border-radius:6px;border:1px solid #eee" />
            }
            <div class="mt-2">
                <label class="form-label">Yeni Görsel (opsiyonel)</label>
                <input asp-for="Image" type="file" class="form-control" accept="image/*" />
                <small class="text-muted">Yüklersen mevcut görselin yerini alır (313×313 kırpılır).</small>
            </div>
        </div>
        <div class="col-md-2">
            <label class="form-label">Sıra</label>
            <input asp-for="Order" class="form-control" />
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <div class="form-check">
                <input class="form-check-input" asp-for="IsActive" />
                <label class="form-check-label" for="IsActive">Aktif</label>
            </div>
        </div>
        <div class="col-md-4 d-flex align-items-end">
            <div class="form-check">
                <input class="form-check-input" asp-for="AutoTranslate" />
                <label class="form-check-label" for="AutoTranslate">AutoTranslate (TR → boş alanlar)</label>
            </div>
        </div>
    </div>

    <hr />

    <!-- Dil sekmeleri -->
    <ul class="nav nav-tabs" id="langTabs" role="tablist">
        @for (int i = 0; i < Model.Langs.Count; i++)
        {
            var lc = Model.Langs[i].LangCode;
            <li class="nav-item" role="presentation">
                <button class="nav-link @(i == 0 ? "active" : "")" id="tab-@lc" data-bs-toggle="tab"
                    data-bs-target="#pane-@lc" type="button" role="tab">@lc.ToUpperInvariant()</button>
            </li>
        }
    </ul>

    <div class="tab-content border border-top-0 p-3">
        @for (int i = 0; i < Model.Langs.Count; i++)
        {
            var lc = Model.Langs[i].LangCode;
            <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="pane-@lc" role="tabpanel">
                <input type="hidden" name="Langs[@i].LangCode" value="@lc" />
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">Başlık (max 30)</label>
                        <input name="Langs[@i].Title" value="@(Model.Langs[i].Title ?? "")" class="form-control js-max30"
                            maxlength="30" />
                        <small class="text-muted"><span class="js-counter">0</span>/30</small>
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">İçerik (max 200)</label>
                        <textarea name="Langs[@i].Content" class="form-control js-max200" rows="3"
                        maxlength="200">@Html.Raw(Model.Langs[i].Content ?? "")</textarea>
                        <small class="text-muted"><span class="js-counter">0</span>/200</small>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="d-flex justify-content-end gap-2 mt-3">
        <a asp-action="Advantages" class="btn btn-outline-secondary">Geri</a>
        <button type="submit" class="btn btn-primary">Kaydet</button>
    </div>
</form>

@section Scripts {
    <script>
        (function () {
            const bind = (selector, max) => {
                document.querySelectorAll(selector).forEach(inp => {
                    const counter = inp.parentElement.querySelector('.js-counter');
                    const update = () => { counter.textContent = String(inp.value.length); };
                    inp.addEventListener('input', update);
                    update();
                });
            };
            bind('.js-max30', 30);
            bind('.js-max200', 200);
        })();
    </script>
}